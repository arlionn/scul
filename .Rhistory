column.labels=c(''))
# Make a histogram of EVALI case rate
hist <- ggplot(marijuana_data, aes(x = cases_per_million)) +
geom_histogram(fill = "white", color = "black") +
theme_classic() +
labs(x="Cases per million population", y = "Count", title = "Histogram of state EVALI case rate")
hist
ggsave("~/Documents/GitHub/evali_and_recreational_marijuana/histogram_evali.pdf", plot = hist,dpi = 1200, width = 6, height = 6, units = "in")
ggsave("~/Documents/GitHub/evali_and_recreational_marijuana/histogram_evali.png", plot = hist,dpi = 1200, width = 6, height = 6, units = "in")
# Make a histogram of e-cigarette case rate
hist_ecig <- ggplot(marijuana_data, aes(x = ecigarette_use)) +
geom_histogram(fill = "white", color = "black") +
theme_classic() +
labs(x="Cases per million population", y = "Count", title = "Histogram of e-cigarette prevalence")
hist_ecig
ggsave("~/Documents/GitHub/evali_and_recreational_marijuana/histogram_ecigarette.pdf", plot = hist_ecig,dpi = 1200, width = 6, height = 6, units = "in")
ggsave("~/Documents/GitHub/evali_and_recreational_marijuana/histogram_ecigarette.png", plot = hist_ecig,dpi = 1200, width = 6, height = 6, units = "in")
# Make a custom color palette
cbPalette <- c("#3F3DCB",
"#d6d4d3",
"#0CC693")
# Make a dot plot of EVALI case rate, highlighting state MJ policy
dot_plot <- ggplot(marijuana_data, aes(x = cases_per_million, y = reorder(state, -cases_per_million))) +
geom_vline(data=filter(marijuana_data, mj_policy==3), aes(xintercept=mean(cases_per_million)), colour=cbPalette[3], size = 1.5, linetype = 'longdash') +
geom_vline(data=filter(marijuana_data, mj_policy==2), aes(xintercept=mean(cases_per_million)), colour=cbPalette[2], size = 1.5, linetype = 'longdash') +
geom_vline(data=filter(marijuana_data, mj_policy==1), aes(xintercept=mean(cases_per_million)), colour=cbPalette[1], size = 1.5, linetype = 'longdash') +
geom_point(aes(fill=as.factor(mj_policy),shape=as.factor(mj_policy)), size=4) +
theme_classic() +
scale_fill_manual(breaks = c("1", "2", "3"),
values=cbPalette,
name = "State marijuana policy",
labels = c("Medicial", "Prohibition", "Recreational")) +
scale_shape_manual(breaks = c("1", "2", "3"),
values=c(21,22,23),
name = "State marijuana policy",
labels = c("Medicial","Prohibition",  "Recreational")) +
theme(legend.position = c(0.7, 0.9)) +
scale_x_continuous(limits = c(0,40)) +
labs(x="",
y = "",
title = "States with recreational marijuana have lower\n rates of e-cigarette/vaping associated lung\n injury (EVALI)") +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 10),
legend.title=element_text(size=15),
legend.text=element_text(size=15),
axis.title.x=element_text(size = 18),
title=element_text(size = 14))
dot_plot
# Make a bar plot of mean EVALI case rate by state MJ policy
bar_plot <- ggplot(marijuana_data, aes(x = as.factor(mj_policy), y = cases_per_million, fill=as.factor(mj_policy),color=as.factor(mj_policy))) +
theme_bw() +
geom_bar(stat = "summary", fun.y = "mean",aes(fill=as.factor(mj_policy))) +
coord_flip() +
theme_classic() +
scale_color_manual(breaks = c("1", "2", "3"),
values=c("black", "black", "black")) +
scale_fill_manual(breaks = c("1", "2", "3"),
values=cbPalette) +
scale_y_continuous(limits = c(0,40)) +
theme(legend.position = "none") +
labs(y="Cases per million population", x = "") +
scale_x_discrete(labels = c("Medicial\n (N = 26)", "Prohibition \n (N = 18)",  " Recreational\n (N = 7)")) +
annotate("text", label = "    6.4**", x = 2.55, y = 12.5, color = "black", size = 5) +
geom_segment(x = 3, xend = 2.1,
y = 10.5, yend = 10.5,
colour = "black") +
geom_segment(x = 3, xend = 3,
y = 9.5, yend =10.5 ,
colour = "black") +
geom_segment(x = 2.1, xend = 2.1,
y = 9.5, yend = 10.5,
colour = "black") +
annotate("text", label = "0.7", x = 1.5, y = 12.5, color = "black", size = 5) +
geom_segment(x = 1, xend = 1.9,
y = 10.5, yend = 10.5,
colour = "black") +
geom_segment(x = 1, xend = 1,
y = 9.5, yend =10.5 ,
colour = "black") +
geom_segment(x = 1.9, xend = 1.9,
y = 9.5, yend = 10.5,
colour = "black")  +
annotate("text", label = "   8.8 - 1.7 = 7.1***", x = 2, y = 25, color = "black", size = 5) +
geom_segment(x = 1, xend = 3,
y = 19, yend = 19,
colour = "black") +
geom_segment(x = 1, xend = 1,
y = 18, yend =19 ,
colour = "black") +
geom_segment(x = 3, xend = 3,
y = 18, yend = 19,
colour = "black")  +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 12, angle = 90, hjust = .5)) +
labs(title="Average case rate by state marijuana policy",
caption=
"Note: * p < 0.05, ** p < 0.01, *** p < 0.001. We consider a state
to be a recreational marijuana state if it had at least one
recreational dispensary open in January 2019. Results
are robust to considering any state with an effective
recreational marijuana law as of 2019 (AK, CA, CO, DC,
ME, MA, MI, NV, OR, VT, WA) to be a recreational state.") +
theme(axis.title.x=element_text(size = 18),
title=element_text(size = 15),
plot.caption = element_text(hjust = 0))
bar_plot
# Combine the two plots
combined_plot <- plot_grid(dot_plot, bar_plot, ncol = 1, align = 'v', rel_heights = c(2,1))
combined_plot
ggsave("~/Documents/GitHub/evali_and_recreational_marijuana/exhibit_1.pdf", plot = combined_plot,dpi = 1200, width = 6, height = 15, units = "in")
ggsave("~/Documents/GitHub/evali_and_recreational_marijuana/exhibit_1.png", plot = combined_plot,dpi = 1200, width = 6, height = 15, units = "in")
# Make a dot plot of e-cigarette use, highlighting state MJ policy
dot_plot_ecig <- ggplot(marijuana_data, aes(x = ecigarette_use, y = reorder(state, -ecigarette_use))) +
geom_vline(data=filter(marijuana_data, mj_policy==3), aes(xintercept=mean(ecigarette_use)), colour=cbPalette[3], size = 1.5, linetype = 'longdash') +
geom_vline(data=filter(marijuana_data, mj_policy==2), aes(xintercept=mean(ecigarette_use)), colour=cbPalette[2], size = 1.5, linetype = 'longdash') +
geom_vline(data=filter(marijuana_data, mj_policy==1), aes(xintercept=mean(ecigarette_use)), colour=cbPalette[1], size = 1.5, linetype = 'longdash') +
geom_point(aes(fill=as.factor(mj_policy),shape=as.factor(mj_policy)), size=4) +
theme_classic() +
scale_fill_manual(breaks = c("1", "2", "3"),
values=cbPalette,
name = "State marijuana policy",
labels = c("Medicial", "Prohibition", "Recreational")) +
scale_shape_manual(breaks = c("1", "2", "3"),
values=c(21,22,23),
name = "State marijuana policy",
labels = c("Medicial","Prohibition",  "Recreational")) +
theme(legend.position = c(.8, 0.9)) +
scale_x_continuous(limits = c(0,9)) +
labs(x="",
y = "",
title = "Prevalence of e-cigarette use is similar across\n states with different marijuana policies.\n") +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 10),
legend.title=element_text(size=15),
legend.text=element_text(size=15),
axis.title.x=element_text(size = 18),
title=element_text(size = 14))
dot_plot_ecig
# Make a bar plot of mean e-cigarete use by state MJ policy
bar_plot_ecig <- ggplot(marijuana_data, aes(x = as.factor(mj_policy), y = ecigarette_use, fill=as.factor(mj_policy),color=as.factor(mj_policy))) +
geom_bar(stat = "summary", fun.y = "mean",aes(fill=as.factor(mj_policy))) +
coord_flip() +
theme_classic() +
scale_color_manual(breaks = c("1", "2", "3"),
values=c("black", "black", "black")) +
scale_fill_manual(breaks = c("1", "2", "3"),
values=cbPalette) +
scale_y_continuous(limits = c(0,9)) +
theme(legend.position = "none") +
labs(y="Prevalence of e-cigarette use (0-100%)", x = "") +
scale_x_discrete(labels = c("Medicial\n (N = 26)", "Prohibition \n (N = 18)",  " Recreational\n (N = 7)")) +
annotate("text", label = "  0.4", x = 2.55, y = 5.8 , color = "black", size = 5) +
geom_segment(x = 3, xend = 2.1,
y = 5.5, yend = 5.5,
colour = "black") +
geom_segment(x = 3, xend = 3,
y = 5, yend =5.5 ,
colour = "black") +
geom_segment(x = 2.1, xend = 2.1,
y = 5, yend = 5.5,
colour = "black") +
annotate("text", label = " -0.7", x = 1.5, y = 5.8, color = "black", size = 5) +
geom_segment(x = 1, xend = 1.9,
y = 5.5, yend = 5.5,
colour = "black") +
geom_segment(x = 1, xend = 1,
y = 5, yend =5.5 ,
colour = "black") +
geom_segment(x = 1.9, xend = 1.9,
y = 5, yend = 5.5,
colour = "black")  +
annotate("text", label = "0.3", x = 2, y = 7.5, color = "black", size = 5) +
geom_segment(x = 1, xend = 3,
y = 7, yend = 7,
colour = "black") +
geom_segment(x = 1, xend = 1,
y = 6.5, yend =7 ,
colour = "black") +
geom_segment(x = 3, xend = 3,
y = 6.5, yend = 7,
colour = "black")  +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 12, angle = 90, hjust = .5)) +
labs(title="Average e-cig use by state marijuana policy",
caption=
"Note: * p < 0.05, ** p < 0.01, *** p < 0.001. We consider a state
to be a recreational marijuana state if it had at least one
recreational dispensary open in January 2019. Results
are robust to considering any state with an effective
recreational marijuana law as of 2019 (AK, CA, CO, DC,
ME, MA, MI, NV, OR, VT, WA) to be a recreational state.") +
theme(axis.title.x=element_text(size = 18),
title=element_text(size = 15),
plot.caption = element_text(hjust = 0))
bar_plot_ecig
# Combine the two plots
combined_plot_ecig <- plot_grid(dot_plot_ecig, bar_plot_ecig, ncol = 1, align = 'v', rel_heights = c(2,1))
combined_plot_ecig
ggsave("~/Documents/GitHub/evali_and_recreational_marijuana/exhibit_2.pdf", plot = combined_plot_ecig,dpi = 1200, width = 6, height = 15, units = "in")
ggsave("~/Documents/GitHub/evali_and_recreational_marijuana/exhibit_2.png", plot = combined_plot_ecig,dpi = 1200, width = 6, height = 15, units = "in")
# Combine the two combined plots
combine_both_plot <- plot_grid(combined_plot, combined_plot_ecig,
ncol = 2,
labels = c('A', 'B'),
rel_heights = c(1,1))
combine_both_plot
ggsave("~/Documents/GitHub/evali_and_recreational_marijuana/main_exhibit.pdf", plot = combine_both_plot,dpi = 1200, width = 12, height = 15, units = "in")
#  EVALI case  rate v e-cigarette use
model_evali_ecig <- lm_robust(cases_per_million ~ ecigarette_use, data = marijuana_data, se_type = "stata")
summary(model_evali_ecig)
## Clean up a little bit (optional)
colnames(pred_df) <- gsub("fit.", "", colnames(pred_df))
#  EVALI case  rate v e-cigarette use. Weighted by population.
model_evali_ecig_weighted <- lm_robust(cases_per_million ~ ecigarette_use, data = marijuana_data, se_type = "stata", weights = population)
summary(model_evali_ecig_weighted)
#   geom_point(fill = "white", color = "white", size = 3) +
library(ggrepel)
#geom_text(aes(label = state),hjust= -.5, vjust=-.25, size = 3) +
# Scatter EVALI case  rate against e-cigarette use
scatterplot <- ggplot(marijuana_data, aes(y = cases_per_million, x = ecigarette_use)) +
geom_point(aes(fill=as.factor(mj_policy),shape=as.factor(mj_policy)), size=4) +
geom_smooth(method='lm_robust') +
theme_classic() +
labs(y="EVALI cases per million population",
x = "Prevalence of e-cigarette use (0-100%)",
title = "There is no discernable relationship between EVALI case rate\n and e-cigarette use",
caption=
"Note: Best fit line is displayed in blue with a slope of -0.8 and a robust standard error of 0.9
(p-value of 0.36). 95% confidence interval is denoted by gray shaded area. Results
are robust to weighting by state population.") +
theme(axis.title.x=element_text(size = 18),
title=element_text(size = 15),
plot.caption = element_text(hjust = 0),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20)) +
scale_fill_manual(breaks = c("1", "2", "3"),
values=cbPalette,
name = "State marijuana policy",
labels = c("Medicial", "Prohibition", "Recreational")) +
scale_shape_manual(breaks = c("1", "2", "3"),
values=c(21,22,23),
name = "State marijuana policy",
labels = c("Medicial","Prohibition",  "Recreational")) +
theme(legend.position =  "none")
p <- scatterplot +  geom_text_repel(data=marijuana_data, aes(label=state),  box.padding = 0.5)
p
ggsave("~/Documents/GitHub/evali_and_recreational_marijuana/exhibit_3.pdf", plot = p, dpi = 1200, width = 8, height = 6, units = "in")
ggsave("~/Documents/GitHub/evali_and_recreational_marijuana/exhibit_3.png", plot = p, dpi = 1200, width = 8, height = 6, units = "in")
#reg cases_per_million i.rm_disp if rm_disp == 1 | mm == 0, robust
#reg cases_per_million i.rm_disp if rm_disp == 1 | mm == 1, robust
#reg cases_per_million i.mm if rm_disp == 1 | mm == 1, robust
#reg cases_per_million i.mm if rm_disp == 0, robust
xaringan:::inf_mr()
install.packages("huxtable")
xaringan:::inf_mr()
getwd()
setwd("~/Google Drive/Teaching/spea_v_506/slides/clean_slides/regression_slides/")
system("`npm bin`/decktape remark regression_part_2.html regression_part_2.pdf --chrome-arg=--disable-web-security")
system("`npm bin`/decktape remark regression_part_2.html regression_part_2.pdf --chrome-arg=--allow-file-access-from-files")
system("`npm bin`/decktape remark regression_part_2.html regression_part_2.pdf --chrome-arg=--disable-web-security")
getwd()
system("`npm bin`/decktape remark regression_part_2.html practice.pdf --chrome-arg=--disable-web-security")
lm(price~carat +as.factor(color), data = diamonds)
knitr::opts_chunk$set(echo = TRUE)
for (i in seq(1,10,by = 1){
for (i in seq(1,10,by = 1)){
print(i)
}
seq(1,10,by = 1)
?t.test
knitr::opts_chunk$set(echo = TRUE)
t.test(diamonds$price, alternative = "two.sided", conf.level = 0.95)
t.test(diamonds$price, mu = 3000, alternative = "two.sided", conf.level = 0.95)
View(diamonds)
t.test(x = (subset(diamonds$price, diamonds$color == "E"),
t.test(x = subset(diamonds$price, diamonds$color == "E"),
y = subset(diamonds$price, diamonds$color == "H"),
mu = 3000,
alternative = "two.sided",
conf.level = 0.95,
paired = FALSE)
t.test(x = subset(diamonds$price, diamonds$color == "E"),
y = subset(diamonds$price, diamonds$color == "H"),
mu = 3000,
alternative = "two.sided",
conf.level = 0.95,
paired = FALSE,
var.equal = FALSE)
t.test(x = subset(diamonds$price, diamonds$color == "E"),
y = subset(diamonds$price, diamonds$color == "H"),
alternative = "two.sided",
conf.level = 0.95,
paired = FALSE,
var.equal = FALSE)
plot_ss <- function(x, y, data, showSquares = FALSE, leastSquares = FALSE){
xlab <- paste(substitute(x))
ylab <- paste(substitute(y))
x <- eval(substitute(x), data)
y <- eval(substitute(y), data)
plot(y ~ x, asp = 1, pch = 16, xlab = xlab, ylab = ylab)
if(leastSquares){
m1 <- lm(y ~ x)
y.hat <- m1$fit
} else{
cat("Click two points to make a line.")
pt1 <- locator(1)
points(pt1$x, pt1$y, pch = 4)
pt2 <- locator(1)
points(pt2$x, pt2$y, pch = 4)
pts <- data.frame("x" = c(pt1$x, pt2$x),"y" = c(pt1$y, pt2$y))
m1 <- lm(y ~ x, data = pts)
y.hat <- predict(m1, newdata = data.frame(x))
}
r <- y - y.hat
abline(m1)
oSide <- x - r
LLim <- par()$usr[1]
RLim <- par()$usr[2]
oSide[oSide < LLim | oSide > RLim] <- c(x + r)[oSide < LLim | oSide > RLim] # move boxes to avoid margins
n <- length(y.hat)
for(i in 1:n){
lines(rep(x[i], 2), c(y[i], y.hat[i]), lty = 2, col = "#56B4E9")
if(showSquares){
lines(rep(oSide[i], 2), c(y[i], y.hat[i]), lty = 3, col = "#E69F00")
lines(c(oSide[i], x[i]), rep(y.hat[i],2), lty = 3, col = "#E69F00")
lines(c(oSide[i], x[i]), rep(y[i],2), lty = 3, col = "#E69F00")
}
}
SS <- round(sum(r^2), 3)
cat("\r                                ")
print(m1)
cat("Sum of Squares: ", SS)
baseball <- read_csv("data/2009Baseball.csv")
plot_ss <- function(x, y, data, showSquares = FALSE, leastSquares = FALSE){
xlab <- paste(substitute(x))
ylab <- paste(substitute(y))
x <- eval(substitute(x), data)
y <- eval(substitute(y), data)
plot(y ~ x, asp = 1, pch = 16, xlab = xlab, ylab = ylab)
if(leastSquares){
m1 <- lm(y ~ x)
y.hat <- m1$fit
} else{
cat("Click two points to make a line.")
pt1 <- locator(1)
points(pt1$x, pt1$y, pch = 4)
pt2 <- locator(1)
points(pt2$x, pt2$y, pch = 4)
pts <- data.frame("x" = c(pt1$x, pt2$x),"y" = c(pt1$y, pt2$y))
m1 <- lm(y ~ x, data = pts)
y.hat <- predict(m1, newdata = data.frame(x))
}
r <- y - y.hat
abline(m1)
oSide <- x - r
LLim <- par()$usr[1]
RLim <- par()$usr[2]
oSide[oSide < LLim | oSide > RLim] <- c(x + r)[oSide < LLim | oSide > RLim] # move boxes to avoid margins
n <- length(y.hat)
for(i in 1:n){
lines(rep(x[i], 2), c(y[i], y.hat[i]), lty = 2, col = "#56B4E9")
if(showSquares){
lines(rep(oSide[i], 2), c(y[i], y.hat[i]), lty = 3, col = "#E69F00")
lines(c(oSide[i], x[i]), rep(y.hat[i],2), lty = 3, col = "#E69F00")
lines(c(oSide[i], x[i]), rep(y[i],2), lty = 3, col = "#E69F00")
}
}
SS <- round(sum(r^2), 3)
cat("\r                                ")
print(m1)
cat("Sum of Squares: ", SS)
plot_ss <- function(x, y, data, showSquares = FALSE, leastSquares = FALSE){
xlab <- paste(substitute(x))
ylab <- paste(substitute(y))
x <- eval(substitute(x), data)
y <- eval(substitute(y), data)
plot(y ~ x, asp = 1, pch = 16, xlab = xlab, ylab = ylab)
if(leastSquares){
m1 <- lm(y ~ x)
y.hat <- m1$fit
} else{
cat("Click two points to make a line.")
pt1 <- locator(1)
points(pt1$x, pt1$y, pch = 4)
pt2 <- locator(1)
points(pt2$x, pt2$y, pch = 4)
pts <- data.frame("x" = c(pt1$x, pt2$x),"y" = c(pt1$y, pt2$y))
m1 <- lm(y ~ x, data = pts)
y.hat <- predict(m1, newdata = data.frame(x))
}
r <- y - y.hat
abline(m1)
oSide <- x - r
LLim <- par()$usr[1]
RLim <- par()$usr[2]
oSide[oSide < LLim | oSide > RLim] <- c(x + r)[oSide < LLim | oSide > RLim] # move boxes to avoid margins
n <- length(y.hat)
for(i in 1:n){
lines(rep(x[i], 2), c(y[i], y.hat[i]), lty = 2, col = "#56B4E9")
if(showSquares){
lines(rep(oSide[i], 2), c(y[i], y.hat[i]), lty = 3, col = "#E69F00")
lines(c(oSide[i], x[i]), rep(y.hat[i],2), lty = 3, col = "#E69F00")
lines(c(oSide[i], x[i]), rep(y[i],2), lty = 3, col = "#E69F00")
}
}
SS <- round(sum(r^2), 3)
cat("\r                                ")
print(m1)
cat("Sum of Squares: ", SS)
plot_ss <- function(x, y, data, showSquares = FALSE, leastSquares = FALSE){
xlab <- paste(substitute(x))
ylab <- paste(substitute(y))
x <- eval(substitute(x), data)
y <- eval(substitute(y), data)
plot(y ~ x, asp = 1, pch = 16, xlab = xlab, ylab = ylab)
if(leastSquares){
m1 <- lm(y ~ x)
y.hat <- m1$fit
} else{
cat("Click two points to make a line.")
pt1 <- locator(1)
points(pt1$x, pt1$y, pch = 4)
pt2 <- locator(1)
points(pt2$x, pt2$y, pch = 4)
pts <- data.frame("x" = c(pt1$x, pt2$x),"y" = c(pt1$y, pt2$y))
m1 <- lm(y ~ x, data = pts)
y.hat <- predict(m1, newdata = data.frame(x))
}
r <- y - y.hat
abline(m1)
oSide <- x - r
LLim <- par()$usr[1]
RLim <- par()$usr[2]
oSide[oSide < LLim | oSide > RLim] <- c(x + r)[oSide < LLim | oSide > RLim] # move boxes to avoid margins
n <- length(y.hat)
for(i in 1:n){
lines(rep(x[i], 2), c(y[i], y.hat[i]), lty = 2, col = "#56B4E9")
if(showSquares){
lines(rep(oSide[i], 2), c(y[i], y.hat[i]), lty = 3, col = "#E69F00")
lines(c(oSide[i], x[i]), rep(y.hat[i],2), lty = 3, col = "#E69F00")
lines(c(oSide[i], x[i]), rep(y[i],2), lty = 3, col = "#E69F00")
}
}
SS <- round(sum(r^2), 3)
cat("\r                                ")
print(m1)
cat("Sum of Squares: ", SS)
}
options(scipen = 999)
library("tidyverse")
library("huxtable")
gpa <- read_csv("data/Wooldridge GPA2 Data Set.csv")
model_1a <- lm(colgpa ~ sat, data = gpa)
summary(model_1a)
huxreg(model_1a, statistics = c(N = "nobs", R2 = "r.squared"))
ggplot(data = gpa, aes(y = model_1a$residuals, x = model_1a$fitted.values)) +
geom_point(size = 4, alpha = 0.15) +
theme_classic() +
labs(x = "Predicted College GPA", y = "Residuals", title = "Residuals from regression model plotted against predicted values") +
theme(axis.title = element_text(size = 15)) +
geom_smooth(method = "lm", se = TRUE, color = "red", fill = "blue")
ggplot(data = gpa, aes(y = colgpa, x = sat)) +
geom_point(size = 4, alpha = 0.10, color = "black") +
theme_classic() +
labs(x = "College GPA", y = "SAT score", title = "Relationship between SAT score and college GPA", subtitle = "Best fit line in red, 99% CI displayed by blue band") +
theme(axis.title = element_text(size = 15)) +
geom_smooth(method = "lm", se = TRUE, level = 0.99, color = "red", fill = "blue")
real_estate <- read_csv("data/REAL-ESTATE-2003.csv")
model_2a <- lm(Price ~ Size, data = real_estate)
huxreg(model_2a, statistics = c(N = "nobs", R2 = "r.squared"))
predict(
model_2a,
data.frame(Size = c(2200)),
se = TRUE
)
model_2b <- lm(Price ~ Distance, data = real_estate)
huxreg(model_2b, statistics = c(N = "nobs", R2 = "r.squared"))
predict(
model_2b,
data.frame(Distance = c(20)),
se = TRUE
)
baseball <- read_csv("data/2009Baseball.csv")
plot_ss(x = Salary, y = Attendance, showSquares = FALSE)
plot_ss(x = Salary, y = Attendance, showSquares = FALSE, leastSquares = TRUE)
plot_ss(x = baseball$Salary, y = baseball$Attendance, showSquares = FALSE, leastSquares = TRUE)
plot_ss(x = baseball$Salary, y = baseball$Attendance, showSquares = FALSE, leastSquares = TRUE)
plot_ss(x = baseball$Salary, y = baseball$Attendance, data = baseball, showSquares = FALSE, leastSquares = TRUE)
plot_ss(x = baseball$Salary, y = baseball$Attendance, data = baseball, showSquares = TRUE, leastSquares = TRUE)
ggplot(data = baseball, aes(y = Attendance, x = Salary)) +
geom_point(size = 4, alpha = 0.5, color = "black") +
theme_classic() +
labs(x = "Salary (million $)", y = "Attendance (millions)", title = "Scatterplot of baseball team salary and attendance from 2009 season") +
theme(axis.title = element_text(size = 15)) +
geom_smooth(method = "lm", se = TRUE, color = "red", fill = "blue")
library(tidyverse)
library(haven)
disaster <- read_csv("~/Downloads/disaster-data.csv")
birth_rates <- read_csv("~/Downloads/UN-birthrate-data.csv")
View(birth_rates)
View(disaster)
library(ggplot2)
browseVignettes()
setwd("~/Documents/GitHub/scul")
devtools::use_vignette("my-vignette")
library(devtools)
devtools::use_vignette("my-vignette")
use_vignette("my-vignette")
install_github(build_vignettes = TRUE)
devtools::install_github(build_vignettes = TRUE)
getwd()
build()
